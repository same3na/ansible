---

# - name: Run Podman container
#   containers.podman.podman_container:
#     name: "{{ item.name }}"
#     image: "{{ item.image }}"
#     state: started
#     detach: true
#     publish: "{{ item.publish | default(omit) }}"
#     env: "{{ item.env | default(omit) }}"
#     etc_hosts: "{{ item.extra_hosts | default(omit) }}"
#     volumes: "{{ item.volumes | default(omit) }}"
#     network: "{{ docker_network_name }}"
#     command: "{{ item.command | default(omit) }}"
#     labels: "{{ item.labels | default(omit) }}"
#     restart_policy: "{{ 'always' if item.restart is true else 'no' if item.restart is false else omit }}"

# - name: "Run Podman container {{ item.name }}"
#   community.docker.docker_container:
#     name: "{{ item.name }}"
#     image: "{{ item.image }}"
#     state: "{{ item.state | default('started') }}"
#     command: "{{ item.command | default(omit) }}"
#     labels: "{{ item.labels | default(omit) }}"
#     restart: "{{ item.restart | default(omit)}}"
#     env: "{{ item.env | default(omit) }}"
#     volumes: "{{ item.volumes | default(omit) }}"
#     networks: "{{ item.networks | default(omit) }}"
#     ports: "{{ item.ports | default(omit) }}"
#     etc_hosts: "{{ item.extra_hosts | default(omit) }}"
#     docker_host: "{{ docker_host }}"


# - name: "Generate systemd unit for Podman container {{ item.name }}"
#   containers.podman.podman_generate_systemd:
#     name: "{{ item.name }}"
#     dest: "{{ ansible_env.HOME }}/.config/systemd/user"
#     restart_policy: "no-restart" # on failure I dont want to restart the container automatically

# - name: Reload user systemd
#   ansible.builtin.command:
#     cmd: systemctl --user daemon-reload
#   become: false
#   run_once: true

# - name: "Enable and start Podman systemd service for container {{ item.name }}"
#   ansible.builtin.systemd:
#     name: "container-{{ item.name }}.service"
#     scope: user
#     enabled: true
#     state: started
#     daemon_reload: true

- name: "Deploy Quadlet container units for {{ item.name }}"
  ansible.builtin.template:
    src: container.container.j2
    dest: "{{ ansible_env.HOME }}/.config/containers/systemd/container.{{ item.name }}.container"
    mode: "0644"
  notify: Reload Systemd


- name: "Enable and start containers systemd service for {{ item.name }}"
  ansible.builtin.systemd:
    name: "container.{{ item.name }}.service"
    scope: user
    enabled: true
    state: started
