name: workflow-dispatch-playbook-run

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      role_tag:
        description: 'The ansible playbook tag to run'
        required: true
        type: string

jobs:
  run-playbook:
    runs-on: ubuntu-latest
    steps:
      # Checkout the infra repo itself
      - name: Checkout Repo
        uses: actions/checkout@v4


      # Step 1: Fetch and inspect OIDC token
      - name: Debug GitHub OIDC token
        id: oidc
        run: |
          TOKEN=$(curl -s \
            --header "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL")
          
          echo "Raw token: $TOKEN"

          # Decode the JWT payload to inspect claims
          PAYLOAD=$(echo $TOKEN | cut -d "." -f2 | base64 --decode | jq .)
          echo "JWT payload:"
          echo "$PAYLOAD"

          # Set token as output for later steps if needed
          echo "::set-output name=oidc::$TOKEN"

      - name: Retrieve secret from Vault
        uses: hashicorp/vault-action@v2 # Use the latest stable version
        with:
          method: jwt
          jwtGithubAudience: vault
          url: https://vault.same3na.com
          role: github-infra-role 
          secrets: |
            kv/samir cousa | MY_SECRET_ENV_VAR

      - name: Use secret from Vault
        run: |
          echo "My secret: ${{ env.MY_SECRET_ENV_VAR }}"

      # - name: Install Ansible
      #   run: |
      #     sudo apt update
      #     sudo apt install -y ansible

      # - name: Install dependencies
      #   run: |
      #     ansible-galaxy collection install -r ./requirements.yml

      # - name: Create vault password file
      #   run: echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > vault_pass.pass

      # # Run the ansible playbook with the specified tag
      # - name: Run Ansible Playbook
      #   run: |
      #     ansible-playbook -i provisioning/inventory/ provisioning/playbook-dev.yml \
      #     --tags "${{ github.event.inputs.role_tag }}" \
      #     --vault-password-file vault_pass.pass